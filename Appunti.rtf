{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf500
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11500\viewh8620\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs30 \cf0 \
Sottotipo if? (No, non c\'92\'e8 sottotipaggio, modificare il subtyping con un semplice equal)\
\
Type blocco then = type blocco else (Non \'e8 type, per\'f2 bisogna controllare che tutto quello usato esista)\
\
Ritorno null oppure voidType (come vogliamo noi)\
\
NestingLevel then != nestingLevel else? (BlockNode, ad ogni blocco ++ e dopo --: va bene)\
\
Le variabili devono persistere dopo il block? (BOH)\
\
Come gestire le call function se std lib (o non si usano, oppure si impedisce anche di dichiararle)\
\
MODIFICARE GRAMMATICA DATA modificando il primo \'93block\'94 in \'93initBlock\'94 (quindi la push 0 viene fatta solo una volta quando parte il programma)\
\
delete x; if(true) then \{print 5\} else \{print x\} (controllare che tutto quello che usa il then o l\'92else esista dal nesting level 0 a quello corrente del then/else)}